---
import Layout from "@/layouts/Layout.astro";
import Back from "@/assets/Back.astro";
import { pages } from "@/assets/pdf";
---

<Layout>
  <a href="/" class="fixed top-4 left-4 z-50">
    <Back class="w-6" />
  </a>

  <main class="relative flex flex-1 flex-col items-center justify-center">
    <div
      id="progress-container"
      class="fixed top-1/2 left-1/2 h-2 w-2/3 -translate-x-1/2 -translate-y-1/2 rounded-full bg-neutral-700"
      style="display: none;"
    >
      <div
        id="progress-bar"
        class="h-full w-0 rounded-full bg-(image:--mesh) bg-cover bg-no-repeat"
      >
      </div>
    </div>

    <div class="wrapper h-svh w-full touch-pan-x touch-pan-y">
      <div
        id="pdf-container"
        class="mx-auto flex size-full touch-pan-x touch-pan-y flex-col gap-1 overflow-auto"
      >
        {
          pages.map((page, i) => (
            <img
              src={page.src}
              alt={page.alt}
              loading="lazy"
              decoding="async"
              class="w-full object-contain"
            />
          ))
        }
      </div>
    </div>

    <div
      style="--filter: transparent;"
      class="pointer-events-none absolute inset-0 bg-[var(--filter)] mix-blend-multiply filter"
    >
    </div>

    <div
      class="fixed bottom-8 z-10 flex rounded-full border border-neutral-800 bg-neutral-900 p-2"
    >
      <button
        id="filter-normal"
        class:list={[
          "min-w-20 rounded-full bg-cover bg-no-repeat px-4 py-2 text-neutral-400 transition-transform active:scale-105",
          true && "bg-(image:--mesh) text-neutral-950",
        ]}
      >
        Normal
      </button>

      <button
        id="filter-night"
        class:list={[
          "min-w-20 rounded-full bg-cover bg-no-repeat px-4 py-2 text-neutral-400 transition-transform active:scale-105",
          false && "bg-(image:--mesh) text-neutral-950",
        ]}
      >
        Nit
      </button>

      <button
        id="filter-day"
        class:list={[
          "min-w-20 rounded-full bg-cover bg-no-repeat px-4 py-2 text-neutral-400 transition-transform active:scale-105",
          false && "bg-(image:--mesh) text-neutral-950",
        ]}
      >
        Dia
      </button>
    </div>
  </main>
</Layout>

<script>
  import interact from "interactjs";

  const container = document.querySelector("#pdf-container") as HTMLElement;
  let scale = 1;

  function dragMoveListener(ev: any) {
    if (scale === 1) return;
    const dataX = container.getAttribute("data-x") || "0";
    const dataY = container.getAttribute("data-y") || "0";
    const x = parseFloat(dataX) + ev.dx;
    const y = parseFloat(dataY) + ev.dy;

    container.style.transition = "none";
    container.style.transform = `translate(${x}px, ${y}px) scale(${scale})`;
    container.setAttribute("data-x", x);
    container.setAttribute("data-y", y);
  }

  interact(container)
    .on("doubletap", function (ev) {
      ev.preventDefault();
      scale = scale === 1 ? 2 : 1;
      container.style.transition = "transform 300ms ease-in-out";
      container.style.transform = `translate(${0}px, ${0}px) scale(${scale})`;
    })
    .draggable({
      autoScroll: true,
      listeners: {
        move: dragMoveListener,
      },
    });
</script>

<script>
  const filter = document.querySelector(".filter") as HTMLElement;
  const filter_night = document.querySelector(
    "#filter-night"
  ) as HTMLButtonElement;
  const filter_day = document.querySelector("#filter-day") as HTMLButtonElement;
  const filter_normal = document.querySelector(
    "#filter-normal"
  ) as HTMLButtonElement;

  filter_night.addEventListener("click", () => {
    filter.style.setProperty("--filter", `var(--filter-red`);

    filter_night.classList.add("bg-(image:--mesh)");
    filter_night.classList.add("text-neutral-950");
    filter_day.classList.remove("bg-(image:--mesh)");
    filter_day.classList.remove("text-neutral-950");
    filter_normal.classList.remove("bg-(image:--mesh)");
    filter_normal.classList.remove("text-neutral-950");
  });

  filter_day.addEventListener("click", () => {
    filter.style.setProperty("--filter", `var(--filter-blue`);

    filter_night.classList.remove("bg-(image:--mesh)");
    filter_night.classList.remove("text-neutral-950");
    filter_day.classList.add("bg-(image:--mesh)");
    filter_day.classList.add("text-neutral-950");
    filter_normal.classList.remove("bg-(image:--mesh)");
    filter_normal.classList.remove("text-neutral-950");
  });

  filter_normal.addEventListener("click", () => {
    filter.style.setProperty("--filter", `transparent`);

    filter_night.classList.remove("bg-(image:--mesh)");
    filter_night.classList.remove("text-neutral-950");
    filter_day.classList.remove("bg-(image:--mesh)");
    filter_day.classList.remove("text-neutral-950");
    filter_normal.classList.add("bg-(image:--mesh)");
    filter_normal.classList.add("text-neutral-950");
  });
</script>
